#BlueJ class context
comment0.target=DirectedGraph
comment0.text=\r\n\ Write\ a\ description\ of\ class\ DirectedGraph\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=DirectedGraph()
comment2.text=\r\n\ DirectedGraph\ Constructor\r\n\r\n
comment3.params=k
comment3.target=boolean\ addNode(java.lang.Object)
comment3.text=\r\n\ Add\ an\ unique\ node\ to\ the\ graph\r\n\r\n\ @param\ k\ the\ key\ to\ add\r\n\ @return\ if\ the\ addition\ is\ successful\r\n
comment4.params=k1\ k2\ w
comment4.target=boolean\ addEdge(java.lang.Object,\ java.lang.Object,\ int)
comment4.text=\r\n\ Add\ a\ directed\ edge\ between\ two\ nodes\r\n\r\n\ @param\ k1\ the\ start\ node\r\n\ @param\ k2\ the\ end\ node\r\n\ @param\ w\ the\ weight\ of\ the\ edge\r\n\ @return\ if\ the\ addition\ is\ successful\r\n
comment5.params=k1
comment5.target=void\ dijkstra(java.lang.Object)
comment5.text=\r\n\ The\ Dijkstra\ Traversal\r\n\r\n\ @param\ k1\ A\ parameter\r\n
comment6.params=k
comment6.target=java.util.ArrayList\ getEdges(java.lang.Object)
comment6.text=\r\n\ Get\ the\ outgoing\ edges\ of\ one\ node\r\n\r\n\ @param\ k\ the\ key\ of\ the\ node\ to\ search\ for\r\n\ @return\ the\ list\ of\ edges\r\n
comment7.params=k
comment7.target=java.util.ArrayList\ getNeighbors(java.lang.Object)
comment7.text=\r\n\ Get\ the\ outgoing\ nodes\ of\ one\ node\r\n\r\n\ @param\ k\ the\ key\ of\ the\ node\ to\ search\ for\r\n\ @return\ the\ list\ of\ nodes\r\n
comment8.params=k\ i
comment8.target=int\ getWeight(java.lang.Object,\ int)
comment8.text=\r\n\ Get\ the\ weight\ of\ a\ specific\ edge\r\n\r\n\ @param\ k\ the\ key\ of\ the\ node\ to\ search\ for\r\n\ @param\ i\ the\ index\ of\ the\ edge\r\n\ @return\ the\ weight\ of\ that\ specific\ edge\r\n
numComments=9
