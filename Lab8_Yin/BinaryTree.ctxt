#BlueJ class context
comment0.target=BinaryTree
comment0.text=\r\n\ A\ outline\ of\ BinaryTree\r\n\ TREE\ of\ TRAINS\!\!\!\!\!\!\!\!\r\n\r\n\ @author\ Zeppelin\ The\ Train\ Conductor\r\n\ @version\ 0.114514T(T\ for\ TRAIN)\r\n
comment1.params=i
comment1.target=int\ numOfElementsDepth(int)
comment1.text=\r\n\ Determine\ the\ numebr\ of\ element\ at\ a\ specific\ depth\ in\ the\ tree\r\n\r\n\ @param\ \ i\ the\ depth\ to\ look\ for\ elements\r\n\ @return\ \ \ the\ number\ of\ elements\ at\ that\ depth\r\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\r\n\ Determine\ if\ the\ tree\ is\ empty\r\n\ \r\n\ @return\ \ if\ the\ tree\ is\ empty\r\n
comment2.params=depT\ depF\ nT
comment2.target=int\ numOfElementsDepth(int,\ int,\ BinaryNode)
comment3.params=
comment3.target=java.lang.String\ preOrderString()
comment3.text=\r\n\ Tree\ traversal\ in\ pre-order\r\n\r\n\ @return\ \ \ the\ tree\ in\ pre-order\r\n
comment4.params=nT
comment4.target=java.lang.String\ preOrderString(BinaryNode)
comment5.params=
comment5.target=java.lang.String\ postOrderString()
comment5.text=\r\n\ Tree\ traversal\ in\ order\r\n\r\n\ @return\ \ \ the\ tree\ in\ order\r\n
comment6.params=nT
comment6.target=java.lang.String\ postOrderString(BinaryNode)
comment7.params=
comment7.target=java.lang.String\ inOrderString()
comment7.text=\r\n\ Tree\ traversal\ in\ post-order\r\n\r\n\ @return\ \ \ the\ tree\ in\ post-order\r\n
comment8.params=nT
comment8.target=java.lang.String\ inOrderString(BinaryNode)
comment9.params=
comment9.target=void\ empty()
comment9.text=\r\n\ Empty\ the\ tree\r\n
numComments=11
